name: Counter Handler

on:
  repository_dispatch:
    types: [
      "increment-counter",
      "create-project",
      "rename-project",
      "delete-project",
      "update-project",
      "bulk-update",
      "get-projects",
      "save-artifacts"
    ]
  push:
    paths:
      - 'project-files/event.json'  # Trigger on event.json changes

env:
  PROJECT_FILES_DIR: ${{ vars.PROJECT_DIR }}
  OWNER: ${{ vars.OWNER_NAME }}
  REPO: ${{ vars.REPO_NAME }}

jobs:
  process-counter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin "https://${{ secrets.PAT_TOKEN }}@github.com/${{ env.OWNER }}/${{ env.REPO }}.git"
          git config --global --add safe.directory /github/workspace

      - name: Process Actions
        run: |
          mkdir -p ${{ env.PROJECT_FILES_DIR }}/counters

          EVENT_TYPE="${{ github.event.action }}"
          PROJECT_NAME="${{ github.event.client_payload.project_name }}"
          NEW_NAME="${{ github.event.client_payload.new_name }}"
          NEW_COUNT="${{ github.event.client_payload.new_count }}"
          ACTION="${{ github.event.client_payload.action }}"

          case $EVENT_TYPE in
            "create-project")
              if [ ! -f "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt" ]; then
                echo "0" > "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt"
                echo "Project created: $PROJECT_NAME"
              else
                echo "Project already exists"
                exit 1
              fi
              ;;

            "rename-project")
              if [ -f "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt" ]; then
                mv "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt" "${{ env.PROJECT_FILES_DIR }}/counters/$NEW_NAME.txt"
              fi
              ;;

            "delete-project")
              rm -f "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt"
              ;;

            "increment-counter"|"update-project")
              if [ "$ACTION" = "update" ] && [ -n "$NEW_COUNT" ]; then
                echo "$NEW_COUNT" > "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt"
              else
                COUNT=$(cat "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt" || echo 0)
                echo $((COUNT + 1)) > "${{ env.PROJECT_FILES_DIR }}/counters/$PROJECT_NAME.txt"
              fi
              ;;

            "get-projects")
              echo "["
              first=true
              for f in ${{ env.PROJECT_FILES_DIR }}/counters/*.txt; do
                if [ -f "$f" ]; then
                  name=$(basename "$f" .txt)
                  count=$(cat "$f")
                  if [ "$first" = true ]; then
                    first=false
                  else
                    echo ","
                  fi
                  echo "  {\"name\": \"$name\", \"count\": $count}"
                fi
              done
              echo "]" > project_list.json
              ;;

          esac

          # Commit changes if any files were modified
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Update counters"
            git push -f origin HEAD:main
